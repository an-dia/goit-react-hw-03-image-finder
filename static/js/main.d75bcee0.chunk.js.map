{"version":3,"sources":["components/Searchbar/Searchbar.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Loader/Loader.jsx","components/Modal/Modal.jsx","components/Button/Button.jsx","servises/pixabay-api.js","App.js","index.js"],"names":["Searchbar","state","imgName","handleImgNameChange","event","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","trim","toast","error","props","onSubmit","this","className","type","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","webformatURL","tags","src","alt","ImageGallery","images","map","id","LoaderSpinner","style","margin","color","height","width","modalRoot","document","querySelector","Modal","handleKeyDown","e","console","log","code","onClose","handleBackdropClick","target","window","addEventListener","removeEventListener","createPortal","onClick","children","Button","allProps","api","fetchImgPixabay","page","BASE_URL","KEY","fetch","then","response","ok","json","Promise","reject","Error","Status","App","status","showModal","handleFormSubmit","handleClickLoadMore","prevState","prevProps","prevImg","nextImg","prevPage","nextPage","pixabayApi","hits","catch","finally","scrollTo","top","documentElement","scrollHeight","behavior","length","aria-label","toggleModal","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"8QAGqBA,G,kNAClBC,MAAQ,CACPC,QAAS,I,EAGXC,oBAAsB,SAAAC,GACrB,EAAKC,SAAS,CAAEH,QAASE,EAAME,cAAcC,MAAMC,iB,EAGpDC,aAAe,SAAAL,GAAU,IACfF,EAAY,EAAKD,MAAjBC,QAGR,GAFAE,EAAMM,iBAEiB,KAAnBR,EAAQS,OACV,OAAOC,IAAMC,MAAM,6BAGrB,EAAKC,MAAMC,SAASb,GACpB,EAAKG,SAAS,CAAEH,QAAS,M,uDAGjB,IACAA,EAAYc,KAAKf,MAAjBC,QAER,OACE,wBAAQe,UAAU,YAAlB,SACE,uBAAMF,SAAUC,KAAKP,aAAcQ,UAAU,aAA7C,UACE,wBAAQC,KAAK,SAASD,UAAU,oBAAhC,SACE,sBAAMA,UAAU,0BAAhB,sBAGF,uBACEA,UAAU,mBACVC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,2BACZd,MAAOL,EACPoB,SAAUN,KAAKb,+B,GAtCYoB,cCYxBC,EAbW,SAAC,GAAD,IAAEC,EAAF,EAAEA,aAAcC,EAAhB,EAAgBA,KAAhB,OACtB,oBAAIT,UAAU,mBAAd,SACE,qBAAMU,IAAKF,EAAcG,IAAKF,EAAMT,UAAU,8BCsCrCY,EAzBM,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACrB,OACG,oBAAIb,UAAU,eAAd,SACQa,EAAOC,KAAI,gBAAGC,EAAH,EAAGA,GAAIP,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAArB,OACV,cAAC,EAAD,CAEED,aAAcA,EACdC,KAAMA,GAFDM,S,iBChBAC,G,kNACnBhC,MAAM,G,uDAEJ,OACE,8BACE,cAAC,IAAD,CACAiC,MAAO,CAAEC,OAAQ,QACjBjB,KAAK,YACLkB,MAAM,UACNC,OAAQ,GACRC,MAAO,W,GAV4Bf,cCFrCgB,EAAYC,SAASC,cAAc,eAEpBC,E,4MASnBC,cAAgB,SAAAC,GACZC,QAAQC,IAAIF,EAAEG,MACC,WAAXH,EAAEG,MACJ,EAAKjC,MAAMkC,W,EAIjBC,oBAAsB,SAAAL,GACpBC,QAAQC,IAAIF,EAAEtC,eACduC,QAAQC,IAAIF,EAAEM,QACVN,EAAEtC,gBAAkBsC,EAAEM,QACxB,EAAKpC,MAAMkC,W,kEAlBbG,OAAOC,iBAAiB,UAAWpC,KAAK2B,iB,6CAIxCQ,OAAOE,oBAAoB,UAAWrC,KAAK2B,iB,+BAmB3C,OAAOW,uBACL,qBAAKrC,UAAU,UAAUsC,QAASvC,KAAKiC,oBAAvC,SACE,qBAAKhC,UAAU,QAAf,SAEGD,KAAKF,MAAM0C,aAGhBjB,O,GAhC6BhB,a,gBCiBpBkC,EArBA,SAAC,GAA4B,IAA3BF,EAA0B,EAA1BA,QAAYG,EAAc,2BACzC,OACE,gDAAQzC,UAAU,SAASC,KAAK,SAC9BqC,QAASA,GACLG,GAFN,6BCWJ,IAIeC,EAJH,CACVC,gBAhBF,SAAyB1D,GAAsB,IAAb2D,EAAY,uDAAL,IAChCC,EAAW,2BACVC,EAAM,qCAEd,OAAOC,MAAM,GAAD,OAAIF,EAAJ,cAAkB5D,EAAlB,iBAAkC2D,EAAlC,gBAA8CE,EAA9C,yDACLE,MAAK,SAAAC,GACJ,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OACb,IAAIC,MAAJ,2CCCNC,EACE,OADFA,EAEK,UAFLA,EAGM,WAHNA,EAIM,WAGSC,E,4MAEnBxE,MAAQ,CACNC,QAAS,GACT4B,OAAQ,GACRjB,MAAO,KACP6D,OAAQF,EACRX,KAAM,EACNc,WAAW,G,EAGbC,iBAAmB,SAAA1E,GACjB,EAAKG,SAAS,CAAEH,a,EAGlB2E,oBAAsB,WACpB,EAAKxE,UAAS,SAAAyE,GAAS,MAAK,CAC1BjB,KAAMiB,EAAUjB,KAAO,O,iEAWRkB,EAAWD,GAAY,IAAD,OACjCE,EAAUF,EAAU5E,QACpB+E,EAAUjE,KAAKf,MAAMC,QACrBgF,EAAWJ,EAAUjB,KACrBsB,EAAWnE,KAAKf,MAAM4D,KAGxBmB,IAAYC,IACdjE,KAAKX,SAAS,CAAEqE,OAAQF,IAExBY,EAAWxB,gBAAgBqB,GACxBhB,MAAK,SAACnC,GAAD,OAAY,EAAKzB,SAAS,CAC9ByB,OAAO,YAAKA,EAAOuD,MACnBX,OAAQF,OAITc,OAAM,SAAAzE,GAAK,OAAI,EAAKR,SAAS,CAAEQ,QAAO6D,OAAQF,QAS/CU,IAAaC,IACfnE,KAAKX,SAAS,CAAEqE,OAAQF,IACxBY,EAAWxB,gBAAgBqB,EAASE,GACjClB,MAAK,SAACnC,GACL,EAAKzB,UAAS,SAAAyE,GAAS,MAAK,CAC1BhD,OAAO,GAAD,mBAAMgD,EAAUhD,QAAhB,YAA2BA,EAAOuD,OACxCX,OAAQF,SAGXc,OAAM,SAAAzE,GAAK,OAAI,EAAKR,SAAS,CAAEQ,QAAO6D,OAAQF,OAC9Ce,SAAQ,WACPpC,OAAOqC,SAAS,CACdC,IAAKjD,SAASkD,gBAAgBC,aAC9BC,SAAU,iB,+BAMV,IAAD,EAC+B5E,KAAKf,MAAnC6B,EADD,EACCA,OAAQ4C,EADT,EACSA,OAAQC,EADjB,EACiBA,UAIxB,OACE,gCACE,cAAC,EAAD,CAAW5D,SAAUC,KAAK4D,mBACzBF,IAAWF,GAAsC,IAAnB1C,EAAO+D,QAAkB,cAAC,EAAD,CAAe/D,OAAQA,IAC9E4C,IAAWF,GAAkB,cAAC,EAAD,IAC7BE,IAAWF,GAAsC,IAAnB1C,EAAO+D,QAAiB,cAAC,EAAD,CAAQtC,QAASvC,KAAK6D,oBAAqBiB,aAAW,oFAI5GnB,GAAa,cAAC,EAAD,CAAO3B,QAAShC,KAAK+E,YAArB,SACZ,sDAGF,cAAC,IAAD,CAAgBC,UAAW,a,GA3FFzE,aCZjC0E,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF3D,SAAS4D,eAAe,W","file":"static/js/main.d75bcee0.chunk.js","sourcesContent":["import { Component } from 'react';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport default class Searchbar extends Component {\r\n   state = {\r\n    imgName: '',\r\n  }\r\n\r\n  handleImgNameChange = event => {\r\n   this.setState({ imgName: event.currentTarget.value.toLowerCase() })\r\n  }\r\n\r\n  handleSubmit = event => {\r\n    const { imgName } = this.state;\r\n    event.preventDefault();\r\n\r\n    if (imgName.trim() === '') {\r\n      return toast.error('Please, add name pokemon!')\r\n    }\r\n\r\n    this.props.onSubmit(imgName);\r\n    this.setState({ imgName: '' });\r\n  }\r\n\r\n  render() {\r\n    const { imgName } = this.state\r\n    \r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form onSubmit={this.handleSubmit} className=\"SearchForm\">\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            value={imgName}      \r\n            onChange={this.handleImgNameChange}      \r\n          />\r\n        </form>\r\n      </header>\r\n    )\r\n  }\r\n}\r\n","import PropTypes from 'prop-types';\r\n\r\nconst ImageGalleryItem = (({webformatURL, tags} ) => (\r\n    <li className=\"ImageGalleryItem\">\r\n      <img  src={webformatURL} alt={tags} className=\"ImageGalleryItem-image\" />\r\n    </li>\r\n    )\r\n  )\r\n\r\nImageGalleryItem.propTypes = {\r\n  key: PropTypes.string,\r\n  webformatURL: PropTypes.string,\r\n  tags: PropTypes.string,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","// import { Component } from 'react';\r\n// import { toast } from 'react-toastify';\r\nimport ImageGalleryItem from '../ImageGalleryItem';\r\n// import pixabayApi from '../../servises/pixabay-api';\r\n// import Loader from '../Loader';\r\n// import { Status } from '../../App';\r\n\r\n// const Status = {\r\n//   IDLE: 'idle',\r\n//   PENDING: 'pending',\r\n//   RESOLVED: 'resolved',\r\n//   REJECTED: 'rejected',\r\n// };\r\n\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ImageGallery = ({images}) => {\r\n  return (\r\n     <ul className=\"ImageGallery\">\r\n            {images.map(({ id, webformatURL, tags }) => (\r\n              <ImageGalleryItem\r\n                key={id}\r\n                webformatURL={webformatURL}\r\n                tags={tags}\r\n              />\r\n            )\r\n            )}\r\n      </ul>\r\n  );\r\n};\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number,\r\n      webformatURL: PropTypes.string.isRequired,\r\n      tags: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default ImageGallery;\r\n\r\n\r\n// export default class ImageGallery extends Component {\r\n//    state = {\r\n//     images: [], \r\n//     error: null,\r\n//     status: Status.IDLE,\r\n//   }\r\n\r\n//    componentDidUpdate(prevProps, prevState) {\r\n//     // const BASE_URL = 'https://pixabay.com/api/';\r\n//     // const KEY = '19252909-b3fce789e9067414046d74c47';\r\n//     const prevImg = prevProps.imgName;\r\n//     const nextImg = this.props.imgName;\r\n    \r\n//      if (prevImg !== nextImg) {\r\n//        this.setState({ status: Status.PENDING});\r\n       \r\n//         // fetch(`${BASE_URL}?q=${this.props.imgName}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`)\r\n//         // .then(response => {\r\n//         //   if (response.ok) {\r\n//         //     return response.json()\r\n//         //   }\r\n//         //   return Promise.reject(\r\n//         //     new Error(`Oh my god, everything is gone !!!`),\r\n//         //   );\r\n//         // })\r\n//        pixabayApi.fetchImgPixabay(this.props.imgName)\r\n//         .then(images => this.setState({ images: [...images.hits], status: Status.RESOLVED }))\r\n//         .catch(error => this.setState({ error, status: Status.REJECTED }))\r\n//      }\r\n     \r\n//   }\r\n\r\n//   render() {\r\n//     const { images} = this.state;\r\n    \r\n//     // if (status === Status.IDLE) {\r\n//     //   return toast('Please enter a search name!')\r\n//     // }\r\n\r\n//     // if (status === Status.PENDING) {\r\n//     //   return <Loader/>\r\n//     // }\r\n\r\n//     //  if (status === Status.REJECTED) {\r\n//     //    return toast.error(error.message)\r\n//     // }\r\n\r\n//     // if (status === Status.RESOLVED ) {\r\n//     //    return <>\r\n//     //   <ul className=\"ImageGallery\">\r\n//     //       {images.length !== 0 &&\r\n//     //         images.map(({ id, webformatURL, tags }) => (\r\n//     //           <ImageGalleryItem\r\n//     //             key={id}\r\n//     //             webformatURL={webformatURL}\r\n//     //             tags={tags}\r\n//     //           />\r\n//     //         )\r\n//     //         )}\r\n//     //       </ul>\r\n      \r\n//     //   </>\r\n//     // }\r\n  \r\n//     return (\r\n//       <ul className=\"ImageGallery\">\r\n//           {images.length !== 0 &&\r\n//             images.map(({ id, webformatURL, tags }) => (\r\n//               <ImageGalleryItem\r\n//                 key={id}\r\n//                 webformatURL={webformatURL}\r\n//                 tags={tags}\r\n//               />\r\n//             )\r\n//             )}\r\n//       </ul>\r\n//     )\r\n//   }\r\n// }\r\n","import Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n// import PropTypes from 'prop-types';\r\n\r\nimport { Component } from 'react'\r\n\r\nexport default class LoaderSpinner extends Component {\r\n  state={}\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Loader\r\n        style={{ margin: \"auto\" }}\r\n        type=\"ThreeDots\"\r\n        color=\"#00BFFF\"\r\n        height={60}\r\n        width={60} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n// const Loader = () => {\r\n//   return (\r\n//     <div>\r\n//        <Loader\r\n//         style={{ margin: \"auto\" }}\r\n//         type=\"ThreeDots\"\r\n//         color=\"#00BFFF\"\r\n//         height={60}\r\n//         width={60} />\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// Loader.propTypes = {\r\n  \r\n// };\r\n\r\n\r\n\r\n\r\n","import { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst modalRoot = document.querySelector('#modal-root')\r\n\r\nexport default class Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyDown)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyDown)\r\n  }\r\n\r\n  handleKeyDown = e => {\r\n      console.log(e.code);\r\n      if (e.code === 'Escape') {\r\n        this.props.onClose();\r\n      }\r\n  } \r\n  \r\n  handleBackdropClick = e => {\r\n    console.log(e.currentTarget);\r\n    console.log(e.target);\r\n    if (e.currentTarget === e.target) {\r\n      this.props.onClose();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return createPortal(\r\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\r\n        <div className=\"Modal\">\r\n          {/* <img src=\"\" alt=\"\" /> */}\r\n          {this.props.children}\r\n        </div>\r\n      </div>,\r\n      modalRoot,\r\n    ); \r\n  }\r\n}\r\n\r\nModal.propTypes = {\r\n  \r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nconst Button = ({onClick, ...allProps}) => {\r\n  return (\r\n    <button className='Button' type='button'\r\n      onClick={onClick}\r\n      {...allProps}\r\n    >\r\n      Load more\r\n    </button>\r\n  );\r\n};\r\n\r\n// Button.defaultProps = {\r\n//   onClick: () => null,\r\n//   children: null,\r\n// }\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func,\r\n  'aria-label': PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Button;","function fetchImgPixabay(imgName, page = '1') {\r\n   const BASE_URL = 'https://pixabay.com/api/';\r\n    const KEY = '19252909-b3fce789e9067414046d74c47';\r\n\r\n  return fetch(`${BASE_URL}?q=${imgName}&page=${page}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`)\r\n        .then(response => {\r\n          if (response.ok) {\r\n            return response.json()\r\n          }\r\n          return Promise.reject(\r\n            new Error(`Oh my god, everything is gone !!!`),\r\n          );\r\n        })\r\n}\r\n\r\nconst api = {\r\n  fetchImgPixabay,\r\n};\r\n\r\nexport default api;","import React, { Component } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport LoaderSpinner from './components/Loader';\nimport Modal from './components/Modal';\nimport Button from './components/Button';\nimport pixabayApi from './servises/pixabay-api';\n// import { ReactComponent as LoupeIcon } from \"./components/icons/loupe .svg\";\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nexport default class App extends Component {\n\n  state = {\n    imgName: '',\n    images: [],\n    error: null,\n    status: Status.IDLE,\n    page: 1,\n    showModal: false,\n  }\n\n  handleFormSubmit = imgName => {\n    this.setState({ imgName });\n  }\n  \n  handleClickLoadMore = () => {\n    this.setState(prevState => ({\n      page: prevState.page + 1,\n    }))\n  }\n\n\n  // toggleModal = () => {\n  //   this.setState(({ showModal }) => ({\n  //     showModal: !showModal,\n  //   }));\n  // }\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevImg = prevState.imgName;\n    const nextImg = this.state.imgName;\n    const prevPage = prevState.page;\n    const nextPage = this.state.page;\n   \n\n    if (prevImg !== nextImg) {\n      this.setState({ status: Status.PENDING });\n    \n      pixabayApi.fetchImgPixabay(nextImg)\n        .then((images) => this.setState({\n          images: [...images.hits],\n          status: Status.RESOLVED\n        }\n        )\n        )\n        .catch(error => this.setState({ error, status: Status.REJECTED }))\n        // .finally(() => {\n        //   window.scrollTo({\n        //     top: document.documentElement.scrollHeight,\n        //     behavior: 'smooth',\n        //   });\n        // });\n    }\n    \n    if (prevPage !== nextPage) {\n      this.setState({ status: Status.PENDING });\n      pixabayApi.fetchImgPixabay(nextImg, nextPage)\n        .then((images) => {\n          this.setState(prevState => ({\n            images: [...prevState.images, ...images.hits],\n            status: Status.RESOLVED,\n          }));\n        })\n        .catch(error => this.setState({ error, status: Status.REJECTED }))\n        .finally(() => {\n          window.scrollTo({\n            top: document.documentElement.scrollHeight,\n            behavior: 'smooth',\n          });\n        });\n    }\n}\n\n  render() {\n    const { images, status, showModal } = this.state;\n   \n\n    // imgName={imgName}  {images.length !== 0 && this.toggleModal\n    return (\n      <div>\n        <Searchbar onSubmit={this.handleFormSubmit} />\n        {status === Status.RESOLVED && images.length  !== 0  && <ImageGallery  images={images}/>} \n        {status === Status.PENDING && <LoaderSpinner/>}\n        {status === Status.RESOLVED && images.length  !== 0 && <Button onClick={this.handleClickLoadMore} aria-label='Найти картинку'/>}\n        \n        \n    \n        {showModal && <Modal onClose={this.toggleModal}>\n          <h1>This content modal</h1>\n          {/* <button type='button' onClick={this.toggleModal}>Closed</button> */}\n        </Modal>}\n        <ToastContainer autoClose={3000}/>\n      </div>\n    )\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}